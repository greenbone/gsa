name: Build and test JavaScript

on:
  push:
    branches:
      - main
      - oldstable
  pull_request:
    branches:
      - main
      - oldstable

jobs:
  testing:
    env:
      REPORT_DIR: reports
    name: Run tests
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version:
          - 20
          - 22
    steps:
      - uses: actions/checkout@v4
      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run JavaScript tests
        env:
          JEST_JUNIT_OUTPUT_DIR: ${{ env.REPORT_DIR }}
        run: npm run test

  coverage:
    env:
      REPORT_DIR: reports
    name: Upload coverage
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version:
          - 22
    steps:
      - uses: actions/checkout@v4
      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run JavaScript tests
        run: npm run test:coverage -- --reporter=default --reporter=junit --outputFile=${{ env.REPORT_DIR }}/test-report.xml
      - name: Load Lint Results
        uses: actions/download-artifact@v4
        with:
          name: linting-report-${{ matrix.node-version }}
          path: ${{ env.REPORT_DIR }}
      - name: Submit test coverage to codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  linting:
    env:
      REPORT_FILE: linting-report.xml
    name: Linting
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version:
          - 20
          - 22
    steps:
      - uses: actions/checkout@v4
      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Lint JavaScript files
        run: npm run lint > ${{ env.REPORT_FILE }}
      - name: Store Lint Results
        uses: actions/upload-artifact@v4
        with:
          name: linting-report-${{ matrix.node-version }}
          path: ${{ env.REPORT_FILE }}

  translations:
    name: Check translations
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        node-version:
          - 20
    steps:
      - uses: actions/checkout@v4
      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Check if translations need an update
        run: npm run i18n-extract -- --fail-on-update
