version: 2
jobs:
  c_check_format:
    docker:
      - image: greenbone/build-env-gvm-libs-master-debian-buster-clang-core
    steps:
      - checkout
      - run:
          name: Check Source Format
          command: clang-format -i -style=file gsad/src/*.{c,h} && git diff --exit-code
  js_test:
    working_directory: ~/gsa
    docker:
      - image: circleci/node:10
        environment:
          ENV: CI
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "./gsa/yarn.lock"  }}
      - run:
          working_directory: ~/gsa/gsa
          name: Update JavaScript dependencies
          command: yarn
      - save_cache:
          key: v1-deps-{{ checksum "./gsa/yarn.lock"  }}
          paths:
            - ./gsa/node_modules
      - run:
          working_directory: ~/gsa/gsa
          name: Run JavaScript tests
          command: yarn test:coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "./reports"
      - run:
          working_directory: ~/gsa/gsa
          name: Submit test coverage to codecov.io
          command: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: ~/gsa/gsa/reports
      - store_artifacts:
          path: ~/gsa/gsa/reports
  js_lint:
    working_directory: ~/gsa
    docker:
      - image: circleci/node:10
        environment:
          ENV: CI
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "./gsa/yarn.lock"  }}
      - run:
          working_directory: ~/gsa/gsa
          name: Update JavaScript dependencies
          command: yarn
      - run:
          working_directory: ~/gsa/gsa
          name: Linting JavaScript files
          command: yarn lint --format junit -o ~/reports/eslint.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports
      - save_cache:
          key: v1-deps-{{ checksum "./gsa/yarn.lock"  }}
          paths:
            - ./gsa/node_modules
  build_gsad:
    working_directory: ~/gsa
    docker:
      - image: greenbone/build-env-gsa-master-debian-stretch-gcc-gsad
    steps:
      - run:
          working_directory: ~/gvm-libs
          name: Checkout gvm-libs
          command: git clone --depth 1 https://github.com/greenbone/gvm-libs.git -b gvm-libs-10.0
      - run:
          working_directory: ~/gvm-libs
          name: Configure and compile gvm-libs
          command: pushd gvm-libs && mkdir build && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release .. && make install && popd
      - checkout
      - run:
          working_directory: ~/gsa/gsad
          name: Configure and compile
          command: mkdir build && rm -rf .git && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release .. && make install
  build_gsa:
    working_directory: ~/gsa
    docker:
      - image: greenbone/build-env-gsa-debian-buster-node10-ng
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "./gsa/yarn.lock"  }}
      - run:
          name: Configure and compile
          command: mkdir build && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release ../gsa && make install
      - save_cache:
          key: v1-deps-{{ checksum "./gsa/yarn.lock"  }}
          paths:
            - ./gsa/node_modules
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_gsad
      - build_gsa
      - js_lint
      - js_test
