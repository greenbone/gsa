version: 2
jobs:
  js_test:
    working_directory: ~/gsa
    docker:
      - image: circleci/node:6
        environment:
          ENV: CI
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "./ng/yarn.lock"  }}
            - v1-deps
      - run:
          working_directory: ~/gsa/ng
          name: Install JavaScript dependencies
          command: yarn
      - save_cache:
          key: v1-deps-{{ checksum "./ng/yarn.lock"  }}
          paths:
            - ./ng/node_modules
      - run:
          working_directory: ~/gsa/ng
          name: Run JavaScript tests
          command: yarn test:coverage
      - run:
          working_directory: ~/gsa/ng
          name: Submit test coverage to codecov.io
          command: bash <(curl -s https://codecov.io/bash)
  build_gsad:
    docker:
      - image: greenbone/build-env-gsa-master-debian-stretch-gcc-gsad
    steps:
      - run:
          working_directory: ~/gvm-libs
          name: Checkout gvm-libs
          command: git clone --depth 1 https://github.com/greenbone/gvm-libs.git
      - run:
          working_directory: ~/gvm-libs
          name: Configure and compile gvm-libs
          command: pushd gvm-libs && mkdir build && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release .. && make install && popd
      - checkout
      - run:
          name: Configure and compile
          command: mkdir build && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release -DSKIP_NG=1 .. && make install
  build_ng:
    docker:
      - image: greenbone/build-env-gsa-master-debian-stretch-node6-ng
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "./ng/yarn.lock"  }}
            - v1-deps
      - run:
          name: Configure and compile
          command: mkdir build && cd build/ && cmake -DCMAKE_BUILD_TYPE=Release -DSKIP_GSAD=1 .. && make install
      - save_cache:
          key: v1-deps-{{ checksum "./ng/yarn.lock"  }}
          paths:
            - ./ng/node_modules
  doc_coverage:
    docker:
      - image: greenbone/code-metrics-doxy-coverage-debian-stretch
    steps:
      - checkout
      - run:
          name: Generate documentation (XML)
          command: mkdir build && cd build/ && cmake -DSKIP_SRC=1 .. && make doc-xml 2> ~/doxygen-stderr.txt
      - run:
          name: Establish coverage
          command: ~/doxy-coverage/doxy-coverage.py ~/project/build/gsad/doc/generated/xml/ > ~/documentation-coverage.txt
      - store_artifacts:
          path: ~/doxygen-stderr.txt
      - store_artifacts:
          path: ~/documentation-coverage.txt
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_gsad
      - build_ng
      - js_test
      - doc_coverage

